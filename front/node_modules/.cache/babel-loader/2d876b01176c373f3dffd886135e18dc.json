{"ast":null,"code":"import _classCallCheck from \"/home/aina/Documents/fistnode/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aina/Documents/fistnode/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aina/Documents/fistnode/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aina/Documents/fistnode/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aina/Documents/fistnode/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aina/Documents/fistnode/front/src/Components/List.js\";\nimport React, { Component } from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Ajout from './Ajout';\nimport './List.css';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:8080/list\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        cd;\n        setTimeout(function () {\n          _this2.setState({\n            isLoaded: true,\n            items: result\n          });\n\n          console.log(result);\n        }, 1000);\n      }, function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, console.log(error.message));\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          class: \"spinner-border text-danger\",\n          role: \"status\",\n          id: \"spinner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Loading...\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"formule\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Ajout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"affiche\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table table-striped table-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          className: \"thead-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Id\"), React.createElement(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Nom\"), React.createElement(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Prenom\"), React.createElement(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Actions\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, items.length > 0 ? items.map(function (item) {\n          return React.createElement(\"tr\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, item.id), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, item.nom.charAt(0).toUpperCase() + item.nom.substring(1).toLowerCase()), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, item.prenom), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: function onClick() {\n              confirmAlert({\n                customUI: function customUI(_ref) {\n                  var onClose = _ref.onClose;\n                  return React.createElement(\"div\", {\n                    className: \"border\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 79\n                    },\n                    __self: this\n                  }, React.createElement(\"form\", {\n                    method: \"POST\",\n                    action: \"http://localhost:8080/list?_method=PUT\",\n                    enctype: \"application/x-www-form-urlencoded\",\n                    id: \"edit\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 80\n                    },\n                    __self: this\n                  }, React.createElement(\"input\", {\n                    type: \"hidden\",\n                    name: \"_method\",\n                    value: \"PUT\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 81\n                    },\n                    __self: this\n                  }), React.createElement(\"input\", {\n                    type: \"text\",\n                    name: \"nom\",\n                    placeholder: item.nom,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 82\n                    },\n                    __self: this\n                  }), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 82\n                    },\n                    __self: this\n                  }), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 82\n                    },\n                    __self: this\n                  }), React.createElement(\"input\", {\n                    type: \"text\",\n                    name: \"prenom\",\n                    placeholder: item.prenom,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 83\n                    },\n                    __self: this\n                  }), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 83\n                    },\n                    __self: this\n                  }), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 83\n                    },\n                    __self: this\n                  }), React.createElement(\"input\", {\n                    type: \"hidden\",\n                    name: \"id\",\n                    value: item.id,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 84\n                    },\n                    __self: this\n                  }), React.createElement(\"button\", {\n                    class: \"btn btn-outline-success\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 85\n                    },\n                    __self: this\n                  }, \"OK\"), React.createElement(\"button\", {\n                    onClick: onClose,\n                    class: \"btn btn-outline-info\",\n                    id: \"ok\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 88\n                    },\n                    __self: this\n                  }, \"Annuler\")));\n                }\n              });\n            },\n            className: \"btn btn-success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(\"button\", {\n            onClick: function onClick() {\n              confirmAlert({\n                customUI: function customUI(_ref2) {\n                  var onClose = _ref2.onClose;\n                  return React.createElement(\"div\", {\n                    class: \"border\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 99\n                    },\n                    __self: this\n                  }, React.createElement(\"form\", {\n                    method: \"POST\",\n                    action: \"http://localhost:8080/list?_method=DELETE\",\n                    enctype: \"application/x-www-form-urlencoded\",\n                    id: \"edit\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 100\n                    },\n                    __self: this\n                  }, React.createElement(\"input\", {\n                    type: \"hidden\",\n                    name: \"_method\",\n                    value: \"DELETE\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 101\n                    },\n                    __self: this\n                  }), React.createElement(\"input\", {\n                    type: \"hidden\",\n                    name: \"id\",\n                    value: item.id,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 103\n                    },\n                    __self: this\n                  }), React.createElement(\"span\", {\n                    id: \"text\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 104\n                    },\n                    __self: this\n                  }, \"confirmer supression\", React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 104\n                    },\n                    __self: this\n                  }), item.nom + ' ' + item.prenom), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 105\n                    },\n                    __self: this\n                  }), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 105\n                    },\n                    __self: this\n                  }), React.createElement(\"button\", {\n                    className: \"btn btn-outline-danger\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 106\n                    },\n                    __self: this\n                  }, \"OUI\"), React.createElement(\"button\", {\n                    onClick: onClose,\n                    className: \"btn btn-outline-info\",\n                    id: \"ok\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 109\n                    },\n                    __self: this\n                  }, \"NON\")));\n                }\n              });\n            },\n            className: \"btn btn-danger\",\n            id: \"supre\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            \"aria-hidden\": \"true\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"\\xD7\"))));\n        }) : React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }))))));\n      }\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/home/aina/Documents/fistnode/front/src/Components/List.js"],"names":["React","Component","confirmAlert","Ajout","List","props","state","error","isLoaded","items","fetch","then","res","json","result","cd","setTimeout","setState","console","log","message","length","map","item","id","nom","charAt","toUpperCase","substring","toLowerCase","prenom","customUI","onClose"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Ajout from './Ajout'\n\nimport './List.css';\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n  \n    componentDidMount() {\n      fetch(\"http://localhost:8080/list\")\n        .then(res => res.json())\n        .then(\n          (result) => {cd\n            setTimeout(() => { \n              this.setState({\n                isLoaded: true,\n                items: result\n              });         \n              console.log(result)\n            },1000)\n            \n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n\n  \n    render() {\n      const { error, isLoaded, items} = this.state;\n      if (error) {\n        return <div>{console.log(error.message)}</div>;\n      }else if (!isLoaded) {\n        return <div class=\"spinner-border text-danger\" role=\"status\" id=\"spinner\">\n                  <span class=\"sr-only\">Loading...</span>\n                </div>;\n      } else {\n        return (\n          <div className=\"container\">\n            <div className=\"formule\">\n              <Ajout/>\n            </div> \n              <div>\n                  \n\n                <div id=\"affiche\" >\n                  <table className=\"table table-striped table-bordered\">\n                    <thead className=\"thead-dark\">\n                      <tr>\n                        <th scope=\"col\">Id</th>\n                        <th scope=\"col\">Nom</th>\n                        <th scope=\"col\">Prenom</th>\n                        <th scope=\"col\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      { (items.length > 0)? items.map(item =>(\n                        <tr key={item.id}>\n                        <td>{item.id}</td>\n                        <td>{item.nom.charAt(0).toUpperCase() + item.nom.substring(1).toLowerCase()}</td>\n                        <td>{item.prenom}</td>\n                        <td><button onClick = {()=>{\n                          confirmAlert({\n                            customUI: ({ onClose }) => {\n                              return (\n                                <div className=\"border\">\n                                  <form method=\"POST\" action=\"http://localhost:8080/list?_method=PUT\" enctype=\"application/x-www-form-urlencoded\" id=\"edit\">\n                                    <input type=\"hidden\" name=\"_method\" value=\"PUT\"/>\n                                    <input type=\"text\" name=\"nom\" placeholder={item.nom}/><br/><br/>\n                                    <input type=\"text\" name=\"prenom\" placeholder={item.prenom}/><br/><br/>\n                                    <input type=\"hidden\" name=\"id\" value={item.id}/>\n                                    <button class=\"btn btn-outline-success\" >\n                                      OK\n                                    </button>\n                                    <button onClick={onClose} class=\"btn btn-outline-info\" id=\"ok\">Annuler</button>\n                                  </form>\n                                </div>\n                              );\n                            }\n                          });\n                        }} className=\"btn btn-success\">Edit</button>\n                        <button onClick = {()=>{\n                          confirmAlert({\n                          customUI: ({ onClose }) => {\n                            return (\n                              <div class=\"border\">\n                                <form method=\"POST\" action=\"http://localhost:8080/list?_method=DELETE\" enctype=\"application/x-www-form-urlencoded\" id=\"edit\">\n                                  <input type=\"hidden\" name=\"_method\" value=\"DELETE\"/>\n                                  \n                                  <input type=\"hidden\" name=\"id\" value={item.id}/>\n                                  <span id=\"text\">confirmer supression<br/>{item.nom + ' '+item.prenom}</span>\n                                  <br/><br/>\n                                  <button className=\"btn btn-outline-danger\" >\n                                    OUI\n                                  </button>\n                                  <button onClick={onClose} className=\"btn btn-outline-info\" id=\"ok\">NON</button>\n                                </form>\n                              </div>\n                            );\n                          }\n                        });\n                        }} className=\"btn btn-danger\" id=\"supre\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button></td>\n                        </tr>\n                      )):(<tr></tr>)}\n                    </tbody>\n                  </table>\n                </div> \n              </div>\n          </div>\n        );\n      }\n    }\n  }\n  export default List "]},"metadata":{},"sourceType":"module"}